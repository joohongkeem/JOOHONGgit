#include <stdio.h>

char dp[501][501]={0};

char ans[501][501]={0};
int arr[502][502];

int max(int a, int b)
{
	if(a>b) return a;
	else return b;
}


int main()
{
	int N,i,j,n,k,t,tmp;

	scanf("%d",&N);
	for(i=0;i<=501;i++)
		for(j=0;j<=501;j++)
			arr[i][j] = 1000001;
	for(i=1;i<=N;i++)
		for(j=1;j<=N;j++) scanf("%d",&arr[i][j]);
	for(i=1;i<=N;i++)
		for(j=1;j<=N;j++) ans[i][j] ++;
	for(i=1;i<=N;i++)
	{
		for(j=1;j<=N;j++) 
		{
			if(arr[i][j] < arr[i-1][j] && i-1>=1) dp[i][j] += 1;
			if(arr[i][j] < arr[i][j+1] && j+1 <=N) dp[i][j] += 2;
			if(arr[i][j] < arr[i+1][j] && i+1 <=N) dp[i][j] += 4;
			if(arr[i][j] < arr[i][j-1] && j-1 >=1) dp[i][j] += 8;
		}
	}
	
		for(i=1;i<=N;i++)
		{
			for(j=1;j<=N;j++) 
			{
				//if(dp[i][j]==0) break;
				if(((dp[i+1][j] & 1) == 1) && i+1<=N) ans[i][j] = max(ans[i][j], ans[i+1][j]+1);
				if(((dp[i][j-1] & 2) == 2) && j-1>=1) ans[i][j] = max(ans[i][j], ans[i][j-1]+1);
				if(((dp[i-1][j] & 4) == 4) && i-1>=1) ans[i][j] = max(ans[i][j], ans[i-1][j]+1);
				if(((dp[i][j+1] & 8) == 8) && j+1<=N) ans[i][j] = max(ans[i][j], ans[i][j+1]+1);
			}
		}
	


	puts("");
	
	for(i=1;i<=N;i++)
	{
		for(j=1;j<=N;j++) 
		{
			printf("%2d ",dp[i][j]);
		}
		puts("");
	}
		puts("");
	
	for(i=1;i<=N;i++)
	{
		for(j=1;j<=N;j++) 
		{
			printf("%2d ",ans[i][j]);
		}
		puts("");
	}
	
	
	tmp = 0;
	for(i=1;i<=N;i++)
	{
		for(j=1;j<=N;j++) 
		{
			tmp = max(tmp,ans[i][j]);
		}
	}
    printf("%d\n",tmp);
	
	return 0;
}